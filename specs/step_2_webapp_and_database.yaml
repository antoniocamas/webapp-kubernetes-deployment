---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-webapp-deployment
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: java-webapp
  replicas: 2 # tells deployment to run N pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: java-webapp
    spec:
      containers:
      - name: java-webapp
        image: codeurjc/java-webapp-bbdd:v2
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: pass
        - name: MYSQL_DATABASE
          value: test
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: java-webapp
  labels:
    app: java-webapp
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: java-webapp-port
  selector:
    app: java-webapp
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: db
  replicas: 1 # tells deployment to run 1 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: mysql:5.6
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: pass
        - name: MYSQL_DATABASE
          value: test
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: db-storage
      volumes:
      - name: db-storage
        persistentVolumeClaim:
          claimName: pvc-1g
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: db
spec:
  ports:
    - port: 3306
      protocol: TCP
      name: bbdd-port
  selector:
    app: db
  type: ClusterIP
